<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd"
	default-autowire="byName">
	

	<!-- 資源文件加載 -->
	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="location" value="user.properties"></property> </bean> -->
	<context:property-placeholder
		location="user.properties" />


	<!-- id=""不一樣但是內容相同的話,要寫equals跟hashcode,不然內容會重複 -->
	<bean id="clazz1" class="com.study.spring.case02.Clazz" p:id="501"
		p:name="Program" p:credit="3" />
	<bean id="clazz2" class="com.study.spring.case02.Clazz" p:id="502"
		p:name="Math" p:credit="2" />
	<bean id="clazz3" class="com.study.spring.case02.Clazz" p:id="503"
		p:name="English" p:credit="1" />
	<bean id="clazz4" class="com.study.spring.case02.Clazz" p:id="501"
		p:name="Program" p:credit="3" />

	<!-- scope="singleton" 沒有做任何事情會先把設定檔的bean掃一遍做建立 -->
	<!-- scope="prototype" 要getBean才會執行 -->
	<bean id="student1" scope="singleton"
		class="com.study.spring.case02.Student" p:id="1001" p:name="John"
		init-method="init" destroy-method="destroy">
		<property name="clazzs">
			<!-- <ref bean="clazz1" /> 這邊比較有2個clazz1就會自己去掉其中一個 -->
			<set>
				<ref bean="clazz1" />
				<ref bean="clazz3" />
				<ref bean="clazz4" />
				<ref bean="clazz1" />
			</set>
		</property>
	</bean>

	<bean id="student2" scope="singleton"
		class="com.study.spring.case02.Student" p:id="1002" p:name="Mary"
		init-method="init" destroy-method="destroy">
		<property name="clazzs">
			<!-- <ref bean="clazz1" /> 這邊比較有2個clazz3就會自己去掉其中一個 -->
			<set>
				<ref bean="clazz1" />
				<ref bean="clazz3" />
				<ref bean="clazz3" />
			</set>
		</property>
	</bean>

	<bean id="student3" scope="singleton"
		class="com.study.spring.case02.Student" p:id="1003" p:name="Helen"
		init-method="init" destroy-method="destroy">
		<property name="clazzs">
			<!-- <ref bean="clazz1" /> 這邊比較有2個clazz1就會自己去掉其中一個 -->
			<set>
				<ref bean="clazz1" />
				<ref bean="clazz2" />
				<ref bean="clazz3" />
				<ref bean="clazz1" />
			</set>
		</property>
	</bean>

	<bean id="teacher1" class="com.study.spring.case02.Teacher">
		<property name="id">
			<value>1</value>
		</property>
		<property name="name">
			<value>bob</value>
		</property>
		<property name="students">
			<set>
				<ref bean="student1" />
				<ref bean="student2" />
				<ref bean="student3" />
			</set>
		</property>
		<property name="subjects">
			<list>
				<value>Program</value>
				<value>Math</value>
				<value>English</value>
				<value>Chinese</value>
			</list>
		</property>
		<property name="salary">
			<map>
				<entry key="base">
					<value>50000</value>
				</entry>
				<entry key="addition">
					<value>20000</value>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="teacher2" class="com.study.spring.case02.Teacher"
		p:id="2" p:name="Jo" p:students-ref="students"
		p:subjects-ref="subjects" p:salary-ref="salary" />

	<util:set id="students">
		<ref bean="student1" />
		<ref bean="student3" />
	</util:set>

	<util:list id="subjects">
		<value>Java</value>
		<value>VB</value>
	</util:list>

	<util:map id="salary">
		<entry>
			<key>
				<value>base</value>
			</key>
			<value>60000</value>
		</entry>
		<entry>
			<key>
				<value>addition</value>
			</key>
			<value>25000</value>
		</entry>
	</util:map>

	<!-- 外部配置 -->
	<bean id="teacher3" class="com.study.spring.case02.Teacher"
		p:id="${teacher.id}" p:name="${teacher.name}"
		p:students-ref="students" p:subjects-ref="subjects"
		p:salary-ref="salary" />

	<!-- scope="prototype" 其中有一個設置prototype 會以prototype配置 -->
	<bean id="carFactory" scope="prototype"
		class="com.study.spring.case02.CarFactory" />

	<!-- 手動配置 -->
	<bean id="color" class="com.study.spring.case02.Color" p:id="1"
		p:name="Yellow" />

	<bean id="red" class="com.study.spring.case02.Color" p:id="2"
		p:name="Red" />

	<bean id="size" class="com.study.spring.case02.Size" p:id="1"
		p:name="A4" />

	<bean id="b5" class="com.study.spring.case02.Size" p:id="1"
		p:name="B5" />

	<!-- 自動配置 -->
	<!-- autowire="byType" 會去掃描有Color.class自動配置只能有一個  -->
	<!-- autowire="byName" 屬性名稱跟bean id名稱一樣 -->
	<!-- autowire="constructor" 使用建構子配置  -->
	<!-- autowire="default" 預設default就是no 需在上面設定default-autowire="byName"  -->
	<bean id="paper" class="com.study.spring.case02.Paper" p:id="101"
		autowire="byName" />

	<bean id="paper2" class="com.study.spring.case02.Paper2"
		p:id="102" autowire="byName" />

	<bean id="paper3" class="com.study.spring.case02.Paper3"
		p:id="103" autowire="constructor" />

	<bean id="paper4" class="com.study.spring.case02.Paper"
		p:id="103" autowire="default" />

</beans>